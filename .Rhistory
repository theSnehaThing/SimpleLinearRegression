print("Hello World")
print(4+7)
dataset = read.csv('Data.csv')
setwd("~/")
setwd("~/")
dataset = read.csv('Data.csv')
setwd("~/Machine Learning A-Z/Part 1 - Data Preprocessing")
dataset = read.csv('Data.csv')
View(dataset)
View(dataset)
#Handle missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = True)),
dataset$Age)
#Handle missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = True)),
dataset$Age)
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
dataset$Country = factor(dataset$Country, levels =c('France', 'Spain', 'Germany'),
lablabels = c(1, 2 ,3))
dataset$Country = factor(dataset$Country, levels =c('France', 'Spain', 'Germany'),
labels = c(1, 2 ,3))
View(dataset)
dataset$Purchased = factor(dataset$Purchased, levels =c('No', 'Yes'),
labels = c(0, 1))
ndle missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
#Encoding Catergorical data
dataset$Country = factor(dataset$Country, levels =c('France', 'Spain', 'Germany'),
labels = c(1, 2 ,3))
dataset$Purchased = factor(dataset$Purchased, levels =c('No', 'Yes'),
labels = c(0, 1))
install.packages('caTools')
library(caTools)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
train_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(train_set)
train_set = scale(train_set)
test_set = scale(test_set)
train_set
#Freature Scaling
train_set[:, 2:3] = scale(train_set[:, 2:3])
train_set[, 2:3] = scale(train_set[, 2:3])
test_set[, 2:3] = scale(test_set[, 2:3])
View(test_set)
View(train_set)
setwd("~/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression")
dataset = read.csv('Salary_Data.csv')
View(dataset)
#datapreprocessing
#Importing the Dataset
dataset = read.csv('Salary_Data.csv')
#dataset = dataset[, 2:3]
#Splitting dataset into train-set and test-set
#install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 1/3)
train_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
#datapreprocessing
#Importing the Dataset
dataset = read.csv('Salary_Data.csv')
#dataset = dataset[, 2:3]
#Splitting dataset into train-set and test-set
#install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = .33)
train_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
#datapreprocessing
#Importing the Dataset
dataset = read.csv('Salary_Data.csv')
#dataset = dataset[, 2:3]
#Splitting dataset into train-set and test-set
#install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = .33)
train_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
#datapreprocessing
#Importing the Dataset
dataset = read.csv('Salary_Data.csv')
#install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
train_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor = lm(formula = Salary ~ YearsExperience, data = train_set)
y_pred = predict(regressor, newdata = test_set)
y_pred = predict(regressor, newdata = test_set)
y_pred
View(test_set)
View(test_set)
install.packages('ggplot2')
library(ggplot2)
library(ggplot2)
ggplot() +
geom_point(aes(x = train_set$YearsExperience, y = train_set$Salary),
colour = 'red') +
geom_line(aes(x=train_set$YearsExperience, y=predict(regressor, newdata = train_set)),
colour = 'blue') +
ggtitle('Salary Vs Experience(Training Set)') +
xlab('Years of Experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x=test_set$YearsExperience, y=predict(regressor, newdata = test_set)),
colour = 'blue') +
ggtitle('Salary Vs Experience(Test Set)') +
xlab('Years of Experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x=train_set$YearsExperience, y=predict(regressor, newdata = train_set)),
colour = 'blue') +
ggtitle('Salary Vs Experience(Test Set)') +
xlab('Years of Experience') +
ylab('Salary')
